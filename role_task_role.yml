---

- name: Set netgroup to dba-admin-dev-grp if host is dev, sandbox, or eval
  set_fact: 
      oracle_netgroup: dba-admin-dev-grp 
      oracle_sudogroup: 50_dba-admin-dev-grp 
  when: (AMGEN_OPERATING_ENVIRONMENT == "d") or
        (AMGEN_OPERATING_ENVIRONMENT == "s") or
        (AMGEN_OPERATING_ENVIRONMENT == "e") 

- name: Set netgroup to dba-admin-tst-grp if host is in test
  set_fact:
      oracle_netgroup: dba-admin-tst-grp
      oracle_sudogroup: 50_dba-admin-tst-grp
  when: (AMGEN_OPERATING_ENVIRONMENT == "t") 

- name: Set netgroup to dba-admin-prd-grp if host is in prod 
  set_fact:
      oracle_netgroup: dba-admin-prd-grp
      oracle_sudogroup: 50_dba-admin-prd-grp
  when: (AMGEN_OPERATING_ENVIRONMENT == "p") 

#- name: copy Oracle rpms file
#  copy: src={{ SRCDIR }}/packages.sh dest=/tmp owner=root group=root mode=0644

#- name: Install Oracle rpms
#  shell: "sh /tmp/packages.sh"

#- name: delete packages file
#  shell: "rm -rf /tmp/packages.sh"

- name: Add unix and Oracle groups to access.conf
  lineinfile:
     dest: /etc/security/access.conf
     line: "{{ item.line }}"
     insertbefore: "-:ALL:ALL"
  with_items:
    - { line: '+:oracle:ALL' }
    - { line: '+:@{{ oracle_netgroup }}:ALL' }

- name: Add oracle user.
  lineinfile: dest=/etc/passwd line="oracle:x:1369:1283:Oracle Service Account:/opt/home/oracle:/bin/bash" 

- name: Add oinstall, dba group.
  lineinfile:
    dest: /etc/group
    #regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { line: 'oinstall:x:19342:oracle' }
    - { line: 'dba:x:1283:oracle' }

- name: create Oracle sudoers file
  copy: src={{ SRCDIR }}/{{ oracle_sudogroup }} dest=/etc/sudoers.d/ owner=root group=root mode=0440
  register: src

- name: Sync sudo netgroup with Satellite
  raw: rhncfg-client get {{ src }}
  
- name: Play for SHM
  include: "kernel.yml"
    
# ask Santosh what this task is for
#- name: Load Kernel Module Bridge
#  command: modprobe bridge
#  ignore_errors: yes

- name: Ensure /etc/security/limits.d directory exists
  file: path=/etc/security/limits.d state=directory 

- name: Install 95-oracle.conf limits file 
  copy: src={{ SRCDIR }}/95-oracle.conf dest=/etc/security/limits.d/95-oracle.conf owner=root group=root mode=0644

- name: Comment out requiretty in /etc/sudoers
  lineinfile: dest=/etc/sudoers regexp="^Defaults    requiretty" line="#Defaults    requiretty"

- name: Modify the Sudoers file
  lineinfile:
     dest: /etc/sudoers
     line: "{{ item.line }}"
  with_items:
    - { line: 'Defaults visiblepw' }
    - { line: 'Defaults !requiretty' }

- name: Install /etc/pam.d/emagent
  copy: src={{ SRCDIR }}/emagent dest=/etc/pam.d/emagent owner=root group=root mode=0644

#- name: Modify /etc/profile for oracle user
#  blockinfile:
#    dest: /etc/profile
#    block: |
#      if [ $USER = "oracle" ]; then
#         if [ $SHELL = "/bin/ksh" ]; then
#            ulimit -p 16384
#            ulimit -n 65536
#      else
#        ulimit -u 16384 -n 65536
#         fi
#      fi

- name: Install oracle inventory file 
  copy: src={{ SRCDIR }}/oraInst.loc dest=/etc/oraInst.loc owner=oracle group=oinstall mode=0644

- name: Create /etc/oratab file
  file: path=/etc/oratab mode=0644 owner=oracle group=oinstall state=touch 

- name: Make top level db directories, except for /u01
  file: path={{ item }} state=directory owner=root group=root mode=0755 
  with_items:
   - /u02
   - /u03
   - /u04
   - /u05
   - /u06
   - /u07
   - /u08

- name: Make db directories, except for /u01/app.
  file: path={{ item }} state=directory owner=oracle group=dba mode=0750 recurse=yes
  with_items:
   - /u02/oradata
   - /u03/orarch
   - /u04/oradmin
   - /u05/oratemp
   - /u06/orabkup
   - /u07/orascripts
   - /opt/home/oracle
   - /u08/oraocr/ocr1

- name: Make /u01/app directory
  file: path={{ item }} state=directory owner=oracle group=oinstall mode=0755 recurse=yes
  with_items:
   - /u01/app

#- name: Add /share/dbsoftware entry to /etc/fstab
#  action: lineinfile dest=/etc/fstab line="usto-cf12-cf01-lif1:/v_cf01_software_dba_lib/regulated_software /share/dbsoftware nfs rw,bg,nfsvers=3,tcp,hard,suid,nointr,timeo=600,rsize=32768,wsize=32768 0 0" 

#- name: mount /share/dbsoftware 
#  command: mount /share/dbsoftware 
#  ignore_errors: yes

- name: Check if db mounts have already been added to /etc/fstab by ansible, register the result
  command: grep -q "ANSIBLE MANAGED BLOCK" /etc/fstab
  register: grep_result
  ignore_errors: True

- name: Add db directory entries to /etc/fstab 
  blockinfile:
         dest: /etc/fstab
         block: |
           #FILER:/xxxx          /u01/app  nfs    rw,bg,hard,nointr,rsize=32768,wsize=32768,tcp,vers=3,timeo=600,suid,actimeo=0  0 0
           #FILER:/xxxx          /u02/oradata/<DB_SID>  nfs    rw,bg,hard,nointr,rsize=32768,wsize=32768,tcp,vers=3,timeo=600  0 0
           #FILER:/xxxx          /u03/orarch  nfs    rw,bg,hard,nointr,rsize=32768,wsize=32768,tcp,vers=3,timeo=600  0 0
           #FILER:/xxxx          /u04/oradmin  nfs    rw,bg,hard,nointr,rsize=32768,wsize=32768,tcp,vers=3,timeo=600  0 0
           #FILER:/xxxx          /u05/oratemp  nfs    rw,bg,hard,nointr,rsize=32768,wsize=32768,tcp,vers=3,timeo=600  0 0
           #FILER:/xxxx          /u06/orabkup  nfs    rw,bg,hard,nointr,rsize=32768,wsize=32768,tcp,vers=3,timeo=600  0 0
           #FILER:/xxxx          /u07/orascripts  nfs    rw,bg,hard,nointr,rsize=32768,wsize=32768,tcp,vers=3,timeo=600  0 0
           #FILER:/xxxx          /opt/home/oracle  nfs    rw,bg,hard,nointr,rsize=32768,wsize=32768,tcp,vers=3,timeo=600,suid  0 0
           #FILER:/xxxx          /u08/oracr/ocr1  nfs    rw,bg,hard,nointr,rsize=32768,wsize=32768,tcp,vers=3,timeo=600,suid,noac,actimeo=0  0 0
  when: grep_result|failed

- name: test amgen OE  var
  debug: var=AMGEN_OPERATING_ENVIRONMENT

- name: Play for database package requisites
  include: "pkg.yml"

- name: Set SELINUX to disabled for DB servers
  include: "selinux.yml" 

#### The below tasks are needed for cloud only

#- name: Create swap file /swapfile 
#  command: dd if=/dev/zero of=/swapfile bs=1024 count=4096000 # 4GB swapfile
#  when: ansible_swaptotal_mb < 1

#- name: Change perms for swap file
#  file: path=/swapfile mode=0600

#- name: Setup the swap file
#  command: mkswap /swapfile
#  ignore_errors: yes

#- name: Enable the swap file
#  command: swapon /swapfile
#  ignore_errors: yes

#- name: add hostname to /etc/hosts
#  lineinfile: dest=/etc/hosts line="{{ ansible_default_ipv4.address }}  {{ ansible_fqdn }}  {{ ansible_hostname }}"

#- name: add hostname to /etc/sysconfig/network
#  shell:  echo "HOSTNAME"=$HOSTNAME  >> /etc/sysconfig/network
#  register: network
#
#- name: restart machine
#  shell: sleep 2 && shutdown -r now " updates triggered"
#  async: 1
#  poll: 0
#  become: true
#  ignore_errors: true

#- name: waiting 300 secs for server to come back
#  local_action: wait_for host= "{{ inventory_hostname }}" port=22 state=started delay=60 timeout=300
#  become: false
#  ignore_errors: true


#- name: restart machine
#  shell: sleep 2 && shutdown -r now " updates triggered"
#  async: 1
#  poll: 0
#  sudo: true
#  ignore_errors: true
#
#- name: waiting 30 secs for server to come back
#  local_action: wait_for host={{ ansible_default_ipv4.address }} port=22 state=started delay=30 timeout=60
#####  become: false
